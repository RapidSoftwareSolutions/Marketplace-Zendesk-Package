{
  "package": "ZendeskCore",
  "tagline": "ZendeskCore API",
  "description": "Create, edit and manage customer support tickets.",
  "image": "https://logo.clearbit.com/zendesk.com?s=128",
  "repo": "https://github.com/RapidSoftwareSolutions/Marketplace-ZendeskCore-Package",
  "keywords": [
    "API",
    "customer",
    "marketing",
    "service",
    "support",
    "ticket"
  ],
  "accounts": {
    "domain": "zendesk.com",
    "credentials": [
      "clientId",
      "clientSecret"
    ]
  },
  "blocks": [
    {
      "name": "getAccessToken",
      "description": "Get AccessToken",
      "method": "POST",
      "url": "/oauth/tokens",
      "args": [
        {
          "name": "clientId",
          "type": "credentials",
          "info": "Unique Identifier. You can find it at Admin->Channels->API->OAuth Clients",
          "required": true
        },
        {
          "name": "clientSecret",
          "type": "credentials",
          "info": "Secret value you received when you registered your application with Zendesk",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "code",
          "type": "String",
          "info": "Code you received from Zendesk after the user granted access",
          "required": true
        },
        {
          "name": "redirectUri",
          "type": "String",
          "info": "The same redirect URL as in received Code step.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getIncrementalTickets",
      "description": "Returns the tickets that changed since the start time. The results include tickets that were updated by the system. The endpoint can return records where the updated_at time is earlier than the start_date time. The reason is that the updated_at value is updated only if the ticket update generates a ticket event. Otherwise, the timestamp of the previous update carries over.",
      "method": "GET",
      "url": "/api/v2/incremental/tickets.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "startTime",
          "type": "Number",
          "info": "Unix time. Example: 1491782400",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getIncrementalTicketsEvents",
      "description": "Returns a stream of changes that occurred on tickets. Each event is tied to an update on a ticket and contains all the fields that were updated in that change. You can include comments in the event stream by using the comment_events sideload. See Sideloading below. If you don't specify the sideload, any comment present in the ticket update is described only by Boolean comment_present and comment_public object properties in the event's child_events array. The comment itself is not included.",
      "method": "GET",
      "url": "/api/v2/incremental/ticket_events.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "startTime",
          "type": "Number",
          "info": "Unix time. Example: 1491782400",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getIncrementalOrganizations",
      "description": "",
      "method": "GET",
      "url": "/api/v2/incremental/organizations.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "startTime",
          "type": "Number",
          "info": "Unix time. Example: 1491782400",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getIncrementalUsers",
      "description": "",
      "method": "GET",
      "url": "/api/v2/incremental/users.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "startTime",
          "type": "Number",
          "info": "Unix time. Example: 1491782400",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getJobStatuses",
      "description": "This shows the current statuses for background jobs running.",
      "method": "GET",
      "url": "/api/v2/job_statuses.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleJobStatus",
      "description": "Get Job bi ID",
      "method": "GET",
      "url": "/api/v2/job_statuses/{job_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "jobId",
          "type": "String",
          "info": "Job ID token",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getJobStatusesByIds",
      "description": "Get many Job by IDs",
      "method": "GET",
      "url": "/api/v2/job_statuses/show_many.json?ids={job_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "jobIds",
          "type": "Array",
          "info": "List of job status ids.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTickets",
      "description": "Tickets are ordered chronologically by created date, from oldest to newest. The first ticket listed may not be the absolute oldest ticket in your account due to ticket archiving. To get a list of all tickets in your account, use the Incremental Ticket Export endpoint.",
      "method": "GET",
      "url": "/api/v2/tickets.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are assignee, assignee.name, created_at, group, id, locale, requester, requester.name, status, subject, updated_at",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc, desc. Defaults to asc",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleTicket",
      "description": "Returns a number of ticket properties, but not the ticket comments. To get the comments, use List Comments.",
      "method": "GET",
      "url": "/api/v2/tickets/{ticket_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "String",
          "info": "Ticket ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTicketsByIds",
      "description": "Accepts a list of ticket ids to return. This endpoint will return up to 100 tickets records.",
      "method": "GET",
      "url": "/api/v2/tickets/show_many.json?ids={ticket_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketIds",
          "type": "Array",
          "info": "Comma-separated list of ticket ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createSingleTicket",
      "description": "Create ticket",
      "method": "POST",
      "url": "/api/v2/tickets.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "comment",
          "type": "String",
          "info": "A comment object that describes the problem, incident, question, or task. todo JSON",
          "required": true,
          "wrapName": "ticket"
        },
        {
          "name": "subject",
          "type": "String",
          "info": "The subject of the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "requesterId",
          "type": "Number",
          "info": "The numeric ID of the user asking for support through the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "submitterId",
          "type": "Number",
          "info": "The numeric ID of the user submitting the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "assigneeId",
          "type": "Number",
          "info": "The numeric ID of the agent to assign the ticket to",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "The numeric ID of the group to assign the ticket to",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "collaboratorIds",
          "type": "Array",
          "info": "An array of the numeric IDs of agents or end-users to CC on the ticket. An email notification is sent to them when the ticket is created",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "collaborators",
          "type": "Array",
          "info": "An array of numeric IDs, emails, or objects containing name and email properties. An email notification is sent to them when the ticket is created. Example: collaborators: [ 562, someone@example.com, { name: Someone Else, email: else@example.com } ]",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "type",
          "type": "String",
          "info": "Allowed values are problem, incident, question, or task",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "priority",
          "type": "String",
          "info": "Allowed values are urgent, high, normal, or low",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "status",
          "type": "String",
          "info": "Allowed values are new, open, pending, hold, solved or closed. Is set to new if status is not specified",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "tags",
          "type": "Array",
          "info": "Comma-separated of tags to add to the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "externalId",
          "type": "Number",
          "info": "An ID to link Zendesk Support tickets to local records",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "forumTopicId",
          "type": "Number",
          "info": "The numeric ID of the topic the ticket originated from, if any",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "problemId",
          "type": "Number",
          "info": "For tickets of type 'incident', the numeric ID of the problem the incident is linked to, if any",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "dueAt",
          "type": "String",
          "info": "For tickets of type 'task', the due date of the task. Accepts the ISO 8601 date format (yyyy-mm-dd)",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "ticketFormId",
          "type": "Number",
          "info": "(Enterprise only) The id of the ticket form to render for the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "customFields",
          "type": "Array",
          "info": "An array of the custom fields of the ticket. See below for details",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "viaFollowupSourceId",
          "type": "String",
          "info": "The id of a closed ticket for a follow-up ticket.",
          "required": false,
          "wrapName": "ticket"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createTickets",
      "description": "Create many tickets from JSON file",
      "method": "POST",
      "url": "/api/v2/tickets/create_many.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "tickets",
          "type": "File",
          "info": "JSON file contents array of tickets data. Example [{ticketData1}, {ticketData2}]. TicketData the same as when creating one ticket.",
          "required": true,
          "wrapName": "tickets",
          "jsonParse": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateSingleTicket",
      "description": "Update single ticket",
      "method": "PUT",
      "url": "/api/v2/tickets/{ticket_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        },
        {
          "name": "commentBody",
          "type": "String",
          "info": "Comment",
          "required": false,
          "vendorName": "body",
          "wrapName": "ticket.comment"
        },
        {
          "name": "commentHtmlBody",
          "type": "String",
          "info": "HTML code of comment",
          "required": false,
          "vendorName": "html_body",
          "wrapName": "ticket.comment"
        },
        {
          "name": "commentAuthorId",
          "type": "Number",
          "info": "Author ID of comment",
          "required": false,
          "vendorName": "author_id",
          "wrapName": "ticket.comment"
        },
        {
          "name": "commentShow",
          "type": "Boolean",
          "info": "False - make comment private",
          "required": false,
          "vendorName": "public",
          "wrapName": "ticket.comment"
        },
        {
          "name": "externalId",
          "type": "String",
          "info": "An id you can use to link Zendesk Support tickets to local records",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "type",
          "type": "String",
          "info": "The type of this ticket, i.e. \"problem\", \"incident\", \"question\" or \"task\"",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "subject",
          "type": "String",
          "info": "The value of the subject field for this ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "rawSubject",
          "type": "String",
          "info": "The dynamic content placeholder, if present, or the \"subject\" value, if not. See Dynamic Content",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "priority",
          "type": "String",
          "info": "Priority, defines the urgency with which the ticket should be addressed: \"urgent\", \"high\", \"normal\", \"low\"",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "status",
          "type": "String",
          "info": "The state of the ticket, \"new\", \"open\", \"pending\", \"hold\", \"solved\", \"closed\"",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "recipient",
          "type": "String",
          "info": "The original recipient e-mail address of the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "requesterId",
          "type": "Number",
          "info": "The user who requested this ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "submitterId",
          "type": "Number",
          "info": "The user who submitted the ticket; The submitter always becomes the author of the first comment on the ticket.",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "assigneeId",
          "type": "Number",
          "info": "What agent is currently assigned to the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "organizationId",
          "type": "Number",
          "info": "The organization of the requester. You can only specify the ID of an organization associated with the requester. See Organization Memberships",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "The group this ticket is assigned to",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "collaboratorIds",
          "type": "Array",
          "info": "Who are currently CC'ed on the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "forumTopicId",
          "type": "Number",
          "info": "The topic this ticket originated from, if any",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "problemId",
          "type": "Number",
          "info": "The problem this incident is linked to, if any",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "dueAt",
          "type": "String",
          "info": "If this is a ticket of type \"task\" it has a due date. Due date format uses ISO 8601 format.",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "tags",
          "type": "Array",
          "info": "The array of tags applied to this ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "customFields",
          "type": "Array",
          "info": "The custom fields of the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "ticketFormId",
          "type": "Number",
          "info": "The id of the ticket form to render for this ticket - only applicable for enterprise accounts",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "brandId",
          "type": "Number",
          "info": "The id of the brand this ticket is associated with - only applicable for enterprise accounts",
          "required": false,
          "wrapName": "ticket"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateTickets",
      "description": "Update tickets by its id (in each obj in list)",
      "method": "PUT",
      "url": "/api/v2/tickets/update_many.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        },
        {
          "name": "params",
          "type": "JSON",
          "info": "Json file with params to update. Example [param1, param2]. Each param is object like params in updateSingleTicket",
          "required": true,
          "wrapName": "tickets"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateTicketsByIds",
      "description": "Update many tickets with the same information",
      "method": "PUT",
      "url": "/api/v2/tickets/update_many.json?ids={ticket_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketIds",
          "type": "Array",
          "info": "List of ticket ids",
          "required": true
        },
        {
          "name": "commentBody",
          "type": "String",
          "info": "Comment",
          "required": false,
          "vendorName": "body",
          "wrapName": "ticket.comment"
        },
        {
          "name": "commentHtmlBody",
          "type": "String",
          "info": "HTML code of comment",
          "required": false,
          "vendorName": "html_body",
          "wrapName": "ticket.comment"
        },
        {
          "name": "commentAuthorId",
          "type": "Number",
          "info": "Author ID of comment",
          "required": false,
          "vendorName": "author_id",
          "wrapName": "ticket.comment"
        },
        {
          "name": "commentShow",
          "type": "Boolean",
          "info": "False - make comment private",
          "required": false,
          "vendorName": "public",
          "wrapName": "ticket.comment"
        },
        {
          "name": "externalId",
          "type": "String",
          "info": "An id you can use to link Zendesk Support tickets to local records",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "type",
          "type": "String",
          "info": "The type of this ticket, i.e. \"problem\", \"incident\", \"question\" or \"task\"",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "subject",
          "type": "String",
          "info": "The value of the subject field for this ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "rawSubject",
          "type": "String",
          "info": "The dynamic content placeholder, if present, or the \"subject\" value, if not. See Dynamic Content",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "priority",
          "type": "String",
          "info": "Priority, defines the urgency with which the ticket should be addressed: \"urgent\", \"high\", \"normal\", \"low\"",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "status",
          "type": "String",
          "info": "The state of the ticket, \"new\", \"open\", \"pending\", \"hold\", \"solved\", \"closed\"",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "recipient",
          "type": "String",
          "info": "The original recipient e-mail address of the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "requesterId",
          "type": "Number",
          "info": "The user who requested this ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "submitterId",
          "type": "Number",
          "info": "The user who submitted the ticket; The submitter always becomes the author of the first comment on the ticket.",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "assigneeId",
          "type": "Number",
          "info": "What agent is currently assigned to the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "organizationId",
          "type": "Number",
          "info": "The organization of the requester. You can only specify the ID of an organization associated with the requester. See Organization Memberships",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "The group this ticket is assigned to",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "collaboratorIds",
          "type": "Array",
          "info": "Who are currently CC'ed on the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "forumTopicId",
          "type": "Number",
          "info": "The topic this ticket originated from, if any",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "problemId",
          "type": "Number",
          "info": "The problem this incident is linked to, if any",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "dueAt",
          "type": "String",
          "info": "If this is a ticket of type \"task\" it has a due date. Due date format uses ISO 8601 format.",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "tags",
          "type": "Array",
          "info": "The array of tags applied to this ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "customFields",
          "type": "Array",
          "info": "The custom fields of the ticket",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "ticketFormId",
          "type": "Number",
          "info": "The id of the ticket form to render for this ticket - only applicable for enterprise accounts",
          "required": false,
          "wrapName": "ticket"
        },
        {
          "name": "brandId",
          "type": "Number",
          "info": "The id of the brand this ticket is associated with - only applicable for enterprise accounts",
          "required": false,
          "wrapName": "ticket"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "markSingleTicketAsSpam",
      "description": "Mark Ticket as Spam and Suspend Requester",
      "method": "PUT",
      "url": "/api/v2/tickets/{ticket_id}/mark_as_spam.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "markTicketsAsSpam",
      "description": "Mark Tickets as Spam and Suspend Requester",
      "method": "PUT",
      "url": "/api/v2/tickets/mark_many_as_spam.json?ids={ticket_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketIds",
          "type": "Array",
          "info": "List of Ticket IDs",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "mergeTickets",
      "description": "Merges one or more tickets into the {id} target ticket.",
      "method": "POST",
      "url": "/api/v2/tickets/{ticket_id}/merge.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        },
        {
          "name": "ids",
          "type": "Array",
          "info": "List of Ticket IDs",
          "required": true
        },
        {
          "name": "targetComment",
          "type": "String",
          "info": "Private comment to add to the target ticket",
          "required": false
        },
        {
          "name": "sourceComment",
          "type": "String",
          "info": "Private comment to add to the source ticket",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTicketRelatedInfo",
      "description": "Get ticket related info",
      "method": "GET",
      "url": "/api/v2/tickets/{ticket_id}/related.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteSingleTicket",
      "description": "Delete ticket",
      "method": "DELETE",
      "url": "/api/v2/tickets/{ticket_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteTickets",
      "description": "Delete tickets",
      "method": "DELETE",
      "url": "/api/v2/tickets/destroy_many.json?ids={ticket_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketIds",
          "type": "Array",
          "info": "List of ticket ids",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTicketCollaborators",
      "description": "Get collaborators from ticket",
      "method": "GET",
      "url": "/api/v2/tickets/{ticket_id}/collaborators.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTicketIncidents",
      "description": "Get ticket incidents",
      "method": "GET",
      "url": "/api/v2/tickets/{ticket_id}/incidents.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTicketsProblems",
      "description": "Get probles tickets",
      "method": "GET",
      "url": "/api/v2/problems.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "autocompleteTicketsProblems",
      "description": "Returns tickets whose type is 'Problem' and whose subject contains the string specified in the text parameter.",
      "method": "POST",
      "url": "/api/v2/problems/autocomplete.json?text={text}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "text",
          "type": "String",
          "info": "Search expression",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAttachment",
      "description": "Get attachment data by ID",
      "method": "GET",
      "url": "/api/v2/attachments/{attachment_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "attachmentId",
          "type": "Number",
          "info": "Attachment ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getComments",
      "description": "Get all comments from ticket",
      "method": "GET",
      "url": "/api/v2/tickets/{ticket_id}/comments.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc, desc. Defaults to asc",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "removeCommentAttachment",
      "description": "Redaction allows you to permanently remove attachments from an existing comment on a ticket. Once removed from a comment, the attachment is replaced with a placeholder 'redacted.txt' file. Note that redaction is permanent. It is not possible to undo redaction or see what was removed. Once a ticket is closed, redacting its attachments is no longer possible.",
      "method": "PUT",
      "url": "/api/v2/tickets/{ticket_id}/comments/{comment_id}/attachments/{attachment_id}/redact.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        },
        {
          "name": "commentId",
          "type": "Number",
          "info": "Comment ID",
          "required": true
        },
        {
          "name": "attachmentId",
          "type": "Number",
          "info": "Attachment ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteAttachment",
      "description": "Remove attachment",
      "method": "DELETE",
      "url": "/api/v2/attachments/{attachment_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "attachmentId",
          "type": "Number",
          "info": "Attachment ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "uploadFiles",
      "description": "Adding multiple attachments to the same upload is handled by splitting requests and passing the API token received from the first request to each subsequent request. The token is valid for 3 days. Note: Even if private attachments are enabled in the Zendesk Support instance, uploaded files are visible to any authenticated user at the content_URL specified in the JSON response until the upload token is consumed. Once an attachment is associated with a ticket or post, visibility is restricted to users with access to the ticket or post with the attachment.",
      "method": "POST",
      "url": "/api/v2/uploads.json?filename={file_name}",
      "type": "binary",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "file",
          "type": "File",
          "info": "File",
          "required": true
        },
        {
          "name": "fileName",
          "type": "String",
          "info": "File name",
          "required": true
        },
        {
          "name": "uploadToken",
          "type": "String",
          "info": "Upload token. Use it when need to upload more then 1 file and associate with token",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteUpload",
      "description": "Delete upload with all attachments",
      "method": "DELETE",
      "url": "/api/v2/uploads/{upload_token}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "uploadToken",
          "type": "String",
          "info": "Upload token. Use it when need to upload more then 1 file and associate with token",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSatisfactionRatings",
      "description": "List all received satisfaction rating requests ever issued for your account.",
      "method": "GET",
      "url": "/api/v2/satisfaction_ratings.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleSatisfactionRating",
      "description": "Get single ticket satisfaction rating",
      "method": "GET",
      "url": "/api/v2/satisfaction_ratings/{satisfaction_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "satisfactionId",
          "type": "Number",
          "info": "Ticket satisfaction rating ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSatisfactionRatingReasons",
      "description": "Return list all reasons for an account",
      "method": "GET",
      "url": "/api/v2/satisfaction_reasons.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSatisfactionRatingReason",
      "description": "Return list all reasons for an account",
      "method": "GET",
      "url": "/api/v2/satisfaction_reasons/{reason_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "reasonId",
          "type": "Number",
          "info": "Ticket satisfaction rating ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createSatisfactionRating",
      "description": "Create a rating for solved tickets, or for tickets that were previously solved and then reopened.",
      "method": "POST",
      "url": "/api/v2/tickets/{ticket_id}/satisfaction_rating.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        },
        {
          "name": "score",
          "type": "String",
          "info": "The rating: \"offered\", \"unoffered\", \"good\" or \"bad\"",
          "required": true,
          "wrapName": "satisfaction_rating"
        },
        {
          "name": "comment",
          "type": "String",
          "info": "Text to satisfaction rating message",
          "required": false,
          "wrapName": "satisfaction_rating"
        },
        {
          "name": "requesterId",
          "type": "Number",
          "info": "The id of ticket requester submitting the rating. Default owner of accessToken",
          "required": false,
          "wrapName": "satisfaction_rating"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSuspendedTickets",
      "description": "Get all suspended tickets",
      "method": "GET",
      "url": "/api/v2/suspended_tickets.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTicketAudits",
      "description": "Lists the audits for a specified ticket.",
      "method": "GET",
      "url": "/api/v2/tickets/{ticket_id}/audits.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTicketSingleAudits",
      "description": "Get audit for a specified ticket by audit ID",
      "method": "GET",
      "url": "/api/v2/tickets/{ticket_id}/audits/{audit_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        },
        {
          "name": "auditId",
          "type": "Number",
          "info": "Audit ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "makeAuditPrivate",
      "description": "Hide audit by ID",
      "method": "PUT",
      "url": "/api/v2/tickets/{ticket_id}/audits/{audit_id}/make_private.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        },
        {
          "name": "auditId",
          "type": "Number",
          "info": "Audit ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "removeWordFromTicketComment",
      "description": "Permanently removes words or strings from a ticket comment. Specify the string to redact in an object with a text property. Example: {\"text\": \"credit-card-number\"}. The characters of the word or string are replaced by the ▇ symbol. Redaction is permanent. You can't undo the redaction or see what was removed. Once a ticket is closed, you can no longer redact strings from its comments.",
      "method": "PUT",
      "url": "/api/v2/tickets/{ticket_id}/comments/{comment_id}/redact.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        },
        {
          "name": "commentId",
          "type": "Number",
          "info": "Comment ID",
          "required": true
        },
        {
          "name": "text",
          "type": "String",
          "info": "Text to search",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "makeCommentPrivate",
      "description": "Make comment private",
      "method": "PUT",
      "url": "/api/v2/tickets/{ticket_id}/comments/{comment_id}/make_private.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        },
        {
          "name": "commentId",
          "type": "Number",
          "info": "Comment ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSkippedTickets",
      "description": "Get all skipped tickets",
      "method": "GET",
      "url": "/api/v2/skips.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "skipTicket",
      "description": "Record a new skip for the current user",
      "method": "POST",
      "url": "/api/v2/skips.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true,
          "wrapName": "skip"
        },
        {
          "name": "reason",
          "type": "String",
          "info": "Reason to skip",
          "required": false,
          "wrapName": "skip"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTicketMetrics",
      "description": "Listing Ticket Metrics",
      "method": "GET",
      "url": "/api/v2/ticket_metrics.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleMetric",
      "description": "Get ticket metric by metric ID",
      "method": "GET",
      "url": "/api/v2/ticket_metrics/{ticket_metric_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketMetricId",
          "type": "Number",
          "info": "Ticket metric ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleTicketMetric",
      "description": "Get ticket metric by ticket ID",
      "method": "GET",
      "url": "/api/v2/tickets/{ticket_id}/metrics.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTicketMetricEvents",
      "description": "List ticket metric events",
      "method": "GET",
      "url": "/api/v2/incremental/ticket_metric_events.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "startTime",
          "type": "String",
          "info": "Unix time",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAllRequests",
      "description": "Get list of requests",
      "method": "GET",
      "url": "/api/v2/requests.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are updated_at, created_at",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc, desc. Defaults to asc",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRequestListByStatus",
      "description": "Get list of requests by status",
      "method": "GET",
      "url": "/api/v2/requests.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "status",
          "type": "Array",
          "info": "Comma-separated list of request's statuses",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are updated_at, created_at",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc, desc. Defaults to asc",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getOpenedRequestList",
      "description": "Get list of opened request",
      "method": "GET",
      "url": "/api/v2/requests/open.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are updated_at, created_at",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc, desc. Defaults to asc",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSolvedRequestList",
      "description": "Get list of solved request",
      "method": "GET",
      "url": "/api/v2/requests/solved.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are updated_at, created_at",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc, desc. Defaults to asc",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getCcdRequestList",
      "description": "",
      "method": "GET",
      "url": "/api/v2/requests/ccd.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are updated_at, created_at",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc, desc. Defaults to asc",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRequestListByUser",
      "description": "Get request by user ID",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/requests.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are updated_at, created_at",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc, desc. Defaults to asc",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRequestListByOrganization",
      "description": "Get request by organization ID",
      "method": "GET",
      "url": "/api/v2/organizations/{organization_id}/requests.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationId",
          "type": "Number",
          "info": "Organization ID",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are updated_at, created_at",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc, desc. Defaults to asc",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleRequest",
      "description": "Get request by ID",
      "method": "GET",
      "url": "/api/v2/requests/{request_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "requestId",
          "type": "Number",
          "info": "Request ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRequestComments",
      "description": "Get comments from request",
      "method": "GET",
      "url": "/api/v2/requests/{request_id}/comments.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "requestId",
          "type": "Number",
          "info": "Request ID",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are updated_at, created_at",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc, desc. Defaults to asc",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getRequestSingleComment",
      "description": "Get single comment from request",
      "method": "GET",
      "url": "/api/v2/requests/{request_id}/comments/{comment_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "requestId",
          "type": "Number",
          "info": "Request ID",
          "required": true
        },
        {
          "name": "commentId",
          "type": "Number",
          "info": "Comment ID",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are updated_at, created_at",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc, desc. Defaults to asc",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createGroup",
      "description": "Create group",
      "method": "POST",
      "url": "/api/v2/groups.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "Group name",
          "required": true,
          "wrapName": "group"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getGroups",
      "description": "Get list of groups",
      "method": "GET",
      "url": "/api/v2/groups.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUserGroups",
      "description": "Get User's list groups",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/groups.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleGroup",
      "description": "Get single group by ID",
      "method": "GET",
      "url": "/api/v2/groups/{group_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "Group ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAssignableGroups",
      "description": "Get assignable groups",
      "method": "GET",
      "url": "/api/v2/groups/assignable.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateGroup",
      "description": "Update group",
      "method": "PUT",
      "url": "/api/v2/groups/{group_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "Group ID",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "New name of group",
          "required": true,
          "wrapName": "group"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteGroup",
      "description": "Delete group",
      "method": "DELETE",
      "url": "/api/v2/groups/{group_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "Group ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getMemberships",
      "description": "Get list of memberships",
      "method": "GET",
      "url": "/api/v2/group_memberships.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUserMemberships",
      "description": "Get list of user memberships",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/group_memberships.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getGroupMemberships",
      "description": "Get group list of memberships",
      "method": "GET",
      "url": "/api/v2/groups/{group_id}/memberships.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "Group ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAssignableMemberships",
      "description": "",
      "method": "GET",
      "url": "/api/v2/group_memberships/assignable.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getGroupAssignableMemberships",
      "description": "",
      "method": "GET",
      "url": "/api/v2/groups/{group_id}/memberships/assignable.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "Group ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUserSingleMembership",
      "description": "Get user single membership",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/group_memberships/{group_membership_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "groupMembershipId",
          "type": "Number",
          "info": "Group membership ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleGroupMembership",
      "description": "Get single group membership",
      "method": "GET",
      "url": "/api/v2/group_memberships/{group_membership_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "groupMembershipId",
          "type": "Number",
          "info": "Group membership ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createMembership",
      "description": "Create group membership",
      "method": "POST",
      "url": "/api/v2/group_memberships.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true,
          "wrapName": "group_membership"
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "Group ID",
          "required": true,
          "wrapName": "group_membership"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteMembership",
      "description": "Immediately removes a user from a group and schedules a job to unassign all working tickets that are assigned to the given user and group combination.",
      "method": "DELETE",
      "url": "/api/v2/group_memberships/{group_membership_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "groupMembershipId",
          "type": "Number",
          "info": "Group membership ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteMemberships",
      "description": "Immediately removes users from groups and schedules a job to unassign all working tickets that are assigned to the given user and group combinations.",
      "method": "DELETE",
      "url": "/api/v2/group_memberships/destroy_many.json?ids={group_membership_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "groupMembershipIds",
          "type": "Array",
          "info": "Comma-separated list of group membership ids",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "setGroupMembershipAsDefault",
      "description": "Set group membership as Default",
      "method": "PUT",
      "url": "/api/v2/users/{user_id}/group_memberships/{group_membership_id}/make_default.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "groupMembershipId",
          "type": "Number",
          "info": "Group membership ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUsers",
      "description": "Get list Users",
      "method": "GET",
      "url": "/api/v2/users.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "role",
          "type": "Array",
          "info": "Users role. Example: [\"end-user\", \"admin\"]",
          "required": false
        },
        {
          "name": "permissionSet",
          "type": "Number",
          "info": "For custom roles in the Enterprise plan. You can only filter by one role id per request",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getGroupUsers",
      "description": "Get list Users of group",
      "method": "GET",
      "url": "/api/v2/groups/{group_id}/users.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "Group ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getOrganizationUsers",
      "description": "Get list Users of group",
      "method": "GET",
      "url": "/api/v2/organizations/{organization_id}/users.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationId",
          "type": "Number",
          "info": "Organization ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUsersByIds",
      "description": "Get Users by Id list",
      "method": "GET",
      "url": "/api/v2/users/show_many.json?ids={user_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userIds",
          "type": "Array",
          "info": "Comma-separated list of user ids",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUsersByExternalIds",
      "description": "Get Users by External Id list",
      "method": "GET",
      "url": "/api/v2/users/show_many.json?external_ids={external_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "externalIds",
          "type": "Array",
          "info": "Comma-separated list of user's external ids",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUserRelatedInfo",
      "description": "Get user related info",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/related.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createUser",
      "description": "Create a new user",
      "method": "POST",
      "url": "/api/v2/users.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "User name",
          "required": true,
          "wrapName": "user"
        },
        {
          "name": "email",
          "type": "String",
          "info": "User email",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "verified",
          "type": "Boolean",
          "info": "True - if you need to create users without sending out a verification email.",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "role",
          "type": "String",
          "info": "If you need to create agents with a specific role, the role parameter only accepts three possible values: \"end-user\", \"agent\", \"admin\".",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "customRoleId",
          "type": "Number",
          "info": "Therefore you will need to set role to \"agent\" as well as add a new parameter called \"custom_role_id\" and give it the actual desired role ID from your Zendesk Support account.",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "twitter",
          "type": "String",
          "info": "User's twitter",
          "required": false,
          "wrapName": "user.identities",
          "complex": true,
          "keyName": "type",
          "keyValue": "value"
        },
        {
          "name": "facebook",
          "type": "String",
          "info": "User's facebook",
          "required": false,
          "wrapName": "user.identities",
          "complex": true,
          "keyName": "type",
          "keyValue": "value"
        },
        {
          "name": "alias",
          "type": "String",
          "info": "An alias displayed to end users",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "details",
          "type": "String",
          "info": "Any details you want to store about the user, such as an address",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "externalId",
          "type": "String",
          "info": "A unique id you can specify for the user",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "localeId",
          "type": "Number",
          "info": "The user's language identifier",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "moderator",
          "type": "Boolean",
          "info": "Designates whether the user has forum moderation capabilities",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "notes",
          "type": "String",
          "info": "Any notes you want to store about the user",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "onlyPrivateComments",
          "type": "Boolean",
          "info": "True if the user can only create private comments",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "organizationId",
          "type": "Number",
          "info": "The id of the organization the user is associated with",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "defaultGroupId",
          "type": "Number",
          "info": "The id of the user's default group. *Can only be set on create, not on update",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "phone",
          "type": "String",
          "info": "The user's primary phone number. See Phone Number below",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "photo",
          "type": "Array",
          "info": "The user's profile picture represented as an Attachment object",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "restrictedAgent",
          "type": "Boolean",
          "info": "If the agent has any restrictions; false for admins and unrestricted agents, true for other agents",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "signature",
          "type": "String",
          "info": "The user's signature. Only agents and admins can have signatures",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "suspended",
          "type": "Boolean",
          "info": "If the agent is suspended. Tickets from suspended users are also suspended, and these users cannot sign in to the end user portal",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "tags",
          "type": "Array",
          "info": "The user's tags. Only present if your account has user tagging enabled",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "ticketRestriction",
          "type": "String",
          "info": "Specifies which tickets the user has access to. Possible values are: \"organization\", \"groups\", \"assigned\", \"requested\", null",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "timeZone",
          "type": "String",
          "info": "The user's time zone. See Time Zone below",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "userFields",
          "type": "Array",
          "info": "Custom fields for the user",
          "required": false,
          "wrapName": "user"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "mergeUsers",
      "description": "Merge two users",
      "method": "PUT",
      "url": "/api/v2/users/{user_id}/merge.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "This user will be merged into the existing user provided in the target user id param. Any two arbitrary users can be merged.",
          "required": true
        },
        {
          "name": "targetUserId",
          "type": "Number",
          "info": "User ID to which will be merged",
          "required": true,
          "wrapName": "user",
          "vendorName": "id"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteUsersByIds",
      "description": "Delete users",
      "method": "DELETE",
      "url": "/api/v2/users/destroy_many.json?ids={user_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userIds",
          "type": "Array",
          "info": "User id list",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "autocompleteUsers",
      "description": "Returns an array of users whose name starts with the value specified in the name paramater. It only returns users with no foreign identities.",
      "method": "GET",
      "url": "/api/v2/users/autocomplete.json?name={name}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "The text from which the name begins",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "requestUserCreate",
      "description": "Sends the owner a reminder email to update their subscription so more agents can be created.",
      "method": "POST",
      "url": "/api/v2/users/request_create.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "User name",
          "required": true,
          "wrapName": "user"
        },
        {
          "name": "email",
          "type": "String",
          "info": "User email",
          "required": true,
          "wrapName": "user"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getMe",
      "description": "Show the Currently Authenticated User",
      "method": "GET",
      "url": "/api/v2/users/me.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "setUserPassword",
      "description": "An admin can set a user's password only if the setting is enabled under Settings > Security > Global. The setting is off by default. Only the account owner can access and change this setting in Zendesk Support.",
      "method": "POST",
      "url": "/api/v2/users/{user_id}/password.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "password",
          "type": "String",
          "info": "New password",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updatePassword",
      "description": "You can only change your own password. Nobody can change the password of another user because it requires knowing the user's existing password. However, an admin can set a new password for another user without knowing the existing password. See \"Set a User's Password\" above.",
      "method": "POST",
      "url": "/api/v2/users/{user_id}/password.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "Your User ID",
          "required": true
        },
        {
          "name": "password",
          "type": "String",
          "info": "New password",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getPasswordRequirements",
      "description": "Get a list of password requirements",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/password/requirements.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "Your User ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getIdentities",
      "description": "Returns all user identities for a given user id.",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/identities.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "Your User ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleIdentity",
      "description": "Shows the identity with the given id.",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/identities/{identity_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "Your User ID",
          "required": true
        },
        {
          "name": "identityId",
          "type": "Number",
          "info": "User identity ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createIdentity",
      "description": "Adds a new identity to a user's profile. An agent can add an identity to any user profile.",
      "method": "POST",
      "url": "/api/v2/users/{user_id}/identities.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "type",
          "type": "String",
          "info": "New identity: email, twitter, facebook or google",
          "required": false
        },
        {
          "name": "value",
          "type": "String",
          "info": "Value of new identity",
          "required": false
        },
        {
          "name": "primary",
          "type": "Boolean",
          "info": "Set identity primary or not",
          "required": false
        },
        {
          "name": "verified",
          "type": "Boolean",
          "info": "If the identity has been verified",
          "required": false
        },
        {
          "name": "undeliverableCount",
          "type": "Number",
          "info": "The number of times a non-delivery response was received at that address (maximum 50)",
          "required": false
        },
        {
          "name": "deliverableState",
          "type": "String",
          "info": "One of \"deliverable\" or \"ticket_sharing_partner\"",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createSelfIdentity",
      "description": "Add an identity to their own user profile",
      "method": "POST",
      "url": "/api/v2/end_users/{user_id}/identities.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "type",
          "type": "String",
          "info": "New identity: email, twitter, facebook or google",
          "required": false
        },
        {
          "name": "value",
          "type": "String",
          "info": "Value of new identity",
          "required": false
        },
        {
          "name": "primary",
          "type": "Boolean",
          "info": "If the identity is the primary identity. *Writable only when creating, not when updating. Use the makeIdentifyPrimary endpoint instead",
          "required": false
        },
        {
          "name": "verified",
          "type": "Boolean",
          "info": "If the identity has been verified",
          "required": false
        },
        {
          "name": "undeliverableCount",
          "type": "Number",
          "info": "The number of times a non-delivery response was received at that address (maximum 50)",
          "required": false
        },
        {
          "name": "deliverableState",
          "type": "String",
          "info": "One of \"deliverable\" or \"ticket_sharing_partner\"",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateIdentity",
      "description": "This endpoint allows you to set the specified identity as verified (but you cannot unverify a verified identity and update the value of the specified identity",
      "method": "PUT",
      "url": "/api/v2/users/{user_id}/identities/{identity_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "identityId",
          "type": "Number",
          "info": "Identity ID",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "Identity name. Example: email, twitter, verified etc. You cant change primary identity value. For more details look at getIdentities",
          "required": false,
          "wrapName": "identity"
        },
        {
          "name": "value",
          "type": "String",
          "info": "Value of identity",
          "required": false,
          "wrapName": "identity"
        },
        {
          "name": "verified",
          "type": "Boolean",
          "info": "Change verified status",
          "required": false,
          "wrapName": "identity"
        },
        {
          "name": "type",
          "type": "String",
          "info": "type of identity",
          "required": false,
          "wrapName": "identity"
        },
        {
          "name": "undeliverableCount",
          "type": "Number",
          "info": "The number of times a non-delivery response was received at that address (maximum 50)",
          "required": false
        },
        {
          "name": "deliverableState",
          "type": "String",
          "info": "One of \"deliverable\" or \"ticket_sharing_partner\"",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "makeIdentityPrimary",
      "description": "Sets the specified identity as primary. Only fort Agents",
      "method": "PUT",
      "url": "/api/v2/users/{user_id}/identities/{identity_id}/make_primary",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "identityId",
          "type": "Number",
          "info": "Identity ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "makeMyIdentityPrimary",
      "description": "Sets the own identity as primary. For verified end users",
      "method": "PUT",
      "url": "/api/v2/end_users/{user_id}/identities/{identity_id}/make_primary",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "Your user ID",
          "required": true
        },
        {
          "name": "identityId",
          "type": "Number",
          "info": "Your identity ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "verifyIdentity",
      "description": "Sets the specified identity as verified.",
      "method": "PUT",
      "url": "/api/v2/users/{user_id}/identities/{identity_id}/verify",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "identityId",
          "type": "Number",
          "info": "Identity ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "requestUserVerification",
      "description": "Sends the user a verification email with a link to verify ownership of the email address.",
      "method": "PUT",
      "url": "/api/v2/users/{user_id}/identities/{identity_id}/request_verification.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "identityId",
          "type": "Number",
          "info": "Identity ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteIdentity",
      "description": "Deletes the identity for a given user.",
      "method": "DELETE",
      "url": "/api/v2/users/{user_id}/identities/{identity_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "identityId",
          "type": "Number",
          "info": "Identity ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getCustomRoles",
      "description": "Get custom roles. Available only in Enterprise plan and Professional plan with the Light Agents add-on",
      "method": "GET",
      "url": "/api/v2/custom_roles.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getEndUser",
      "description": "Get end-user by ID",
      "method": "GET",
      "url": "/api/v2/end_users/{user_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateUser",
      "description": "Update end-users",
      "method": "PUT",
      "url": "/api/v2/end_users/{user_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "New user name",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "email",
          "type": "String",
          "info": "User email",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "verified",
          "type": "Boolean",
          "info": "True - if you need to create users without sending out a verification email.",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "role",
          "type": "String",
          "info": "If you need to create agents with a specific role, the role parameter only accepts three possible values: \"end-user\", \"agent\", \"admin\".",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "customRoleId",
          "type": "Number",
          "info": "Therefore you will need to set role to \"agent\" as well as add a new parameter called \"custom_role_id\" and give it the actual desired role ID from your Zendesk Support account.",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "twitter",
          "type": "String",
          "info": "User's twitter",
          "required": false,
          "wrapName": "user.identities",
          "complex": true,
          "keyName": "type",
          "keyValue": "value"
        },
        {
          "name": "facebook",
          "type": "String",
          "info": "User's facebook",
          "required": false,
          "wrapName": "user.identities",
          "complex": true,
          "keyName": "type",
          "keyValue": "value"
        },
        {
          "name": "alias",
          "type": "String",
          "info": "An alias displayed to end users",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "details",
          "type": "String",
          "info": "Any details you want to store about the user, such as an address",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "externalId",
          "type": "String",
          "info": "A unique id you can specify for the user",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "localeId",
          "type": "Number",
          "info": "The user's language identifier",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "moderator",
          "type": "Boolean",
          "info": "Designates whether the user has forum moderation capabilities",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "notes",
          "type": "String",
          "info": "Any notes you want to store about the user",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "onlyPrivateComments",
          "type": "Boolean",
          "info": "True if the user can only create private comments",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "organizationId",
          "type": "Number",
          "info": "The id of the organization the user is associated with",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "phone",
          "type": "String",
          "info": "The user's primary phone number. See Phone Number below",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "photo",
          "type": "Array",
          "info": "The user's profile picture represented as an Attachment object",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "restrictedAgent",
          "type": "Boolean",
          "info": "If the agent has any restrictions; false for admins and unrestricted agents, true for other agents",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "signature",
          "type": "String",
          "info": "The user's signature. Only agents and admins can have signatures",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "suspended",
          "type": "Boolean",
          "info": "If the agent is suspended. Tickets from suspended users are also suspended, and these users cannot sign in to the end user portal",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "tags",
          "type": "Array",
          "info": "The user's tags. Only present if your account has user tagging enabled",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "ticketRestriction",
          "type": "String",
          "info": "Specifies which tickets the user has access to. Possible values are: \"organization\", \"groups\", \"assigned\", \"requested\", null",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "timeZone",
          "type": "String",
          "info": "The user's time zone. See Time Zone below",
          "required": false,
          "wrapName": "user"
        },
        {
          "name": "userFields",
          "type": "Array",
          "info": "Custom fields for the user",
          "required": false,
          "wrapName": "user"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSessions",
      "description": "Get list of sessions",
      "method": "GET",
      "url": "/api/v2/sessions.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUsersSessions",
      "description": "Get user's list of sessions",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/sessions.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleSession",
      "description": "Get session by ID",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/sessions/{session_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "sessionId",
          "type": "Number",
          "info": "Session ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteSession",
      "description": "Delete single session",
      "method": "DELETE",
      "url": "/api/v2/users/{user_id}/sessions/{session_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "sessionId",
          "type": "Number",
          "info": "Session ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteAllSessions",
      "description": "Delete all session for current user",
      "method": "DELETE",
      "url": "/api/v2/users/{user_id}/sessions.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "logout",
      "description": "Deletes the current session. In practice, this only works when using session auth for requests, such as client-side requests made from a Zendesk app. When using OAuth or basic authentication, you don't have a current session so this endpoint has no effect.",
      "method": "DELETE",
      "url": "/api/v2/users/me/logout.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getOrganizations",
      "description": "Return list of organization",
      "method": "GET",
      "url": "/api/v2/organizations.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUserOrganizations",
      "description": "Return list of users's organization",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/organizations.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "autocompleteOrganizations",
      "description": "Returns an array of organizations whose name starts with the value specified in the name parameter.",
      "method": "GET",
      "url": "/api/v2/organizations/autocomplete.json?name={organization_name}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationName",
          "type": "String",
          "info": "Part of organization name",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getOrganizationRelatedInfo",
      "description": "Get organization info by ID",
      "method": "GET",
      "url": "/api/v2/organizations/{organization_id}/related.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationId",
          "type": "Number",
          "info": "Organization ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getOrganizationsByIds",
      "description": "Get organizations by IDs",
      "method": "GET",
      "url": "/api/v2/organizations/show_many.json?ids={organization_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationIds",
          "type": "Array",
          "info": "Comma-separated list of organization ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createOrganization",
      "description": "Create new organization",
      "method": "POST",
      "url": "/api/v2/organizations.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "New organization name",
          "required": true,
          "wrapName": "organization"
        },
        {
          "name": "externalId",
          "type": "String",
          "info": "A unique external id to associate organizations to an external record",
          "required": false,
          "wrapName": "organization"
        },
        {
          "name": "domainNames",
          "type": "Array",
          "info": "An array of domain names associated with this organization",
          "required": false,
          "wrapName": "organization"
        },
        {
          "name": "details",
          "type": "String",
          "info": "Any details obout the organization, such as the address",
          "required": false,
          "wrapName": "organization"
        },
        {
          "name": "notes",
          "type": "String",
          "info": "Any notes you have about the organization",
          "required": false,
          "wrapName": "organization"
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "New tickets from users in this organization are automatically put in this group",
          "required": false,
          "wrapName": "organization"
        },
        {
          "name": "sharedTickets",
          "type": "Boolean",
          "info": "End users in this organization are able to see each other's tickets",
          "required": false,
          "wrapName": "organization"
        },
        {
          "name": "sharedComments",
          "type": "Boolean",
          "info": "End users in this organization are able to see each other's comments on tickets",
          "required": false,
          "wrapName": "organization"
        },
        {
          "name": "tags",
          "type": "Array",
          "info": "The tags of the organization",
          "required": false,
          "wrapName": "organization"
        },
        {
          "name": "organizationFields",
          "type": "JSON",
          "info": "Custom fields for this organization. Example: [\"org_dropdown\": \"option_1\", \"org_decimal\": 5.2]",
          "required": false,
          "wrapName": "organization"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "searchOrganizations",
      "description": "Search organization by external_id",
      "method": "GET",
      "url": "/api/v2/organizations/search.json?external_id={external_id}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "externalId",
          "type": "Number",
          "info": "External ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createOrganizationSubscription",
      "description": "Create organization subscription. End users can only subscribe to shared organizations in which they're members.",
      "method": "POST",
      "url": "/api/v2/organization_subscriptions.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "organizationId",
          "type": "Number",
          "info": "Organization subscription ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getListOrganizationSubscriptions",
      "description": "Get list of all organizations and subscriptions",
      "method": "GET",
      "url": "/api/v2/organization_subscriptions.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleOrganizationSubscriptions",
      "description": "Get list of all single organization subscriptions",
      "method": "GET",
      "url": "/api/v2/organizations/{organization_id}/subscriptions.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationId",
          "type": "Number",
          "info": "Organization ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUserOrganizationSubscriptions",
      "description": "Get list of all user organization subscriptions",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/organization_subscriptions.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleOrganizationSubscription",
      "description": "Get organization subscription",
      "method": "GET",
      "url": "/api/v2/organization_subscriptions/{organization_subscription_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationSubscriptionId",
          "type": "Number",
          "info": "Organization subscription ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getListOrganizationMemberships",
      "description": "Get list of all organization memberships",
      "method": "GET",
      "url": "/api/v2/organization_memberships.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getUserOrganizationMemberships",
      "description": "Get list of single user memberships",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/organization_memberships.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "String",
          "info": "User ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleOrganizationMemberships",
      "description": "Get list of single organization memberships",
      "method": "GET",
      "url": "/api/v2/organizations/{organization_id}/organization_memberships.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationId",
          "type": "String",
          "info": "Organization ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleMembership",
      "description": "Get single organization membership",
      "method": "GET",
      "url": "/api/v2/users/{user_id}/organization_memberships/{organization_membership_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "organizationMembershipId",
          "type": "Number",
          "info": "Organization membership ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createOrganizationMembership",
      "description": "Create new organization membership",
      "method": "POST",
      "url": "/api/v2/users/{user_id}/organization_memberships.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "organizationId",
          "type": "String",
          "info": "Organization ID",
          "required": true,
          "wrapName": "organization_membership"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "setOrganizationMembershipAsDefault",
      "description": "Set organization membership as default",
      "method": "PUT",
      "url": "/api/v2/users/{user_id}/organization_memberships/{organization_membership_id}/make_default.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userId",
          "type": "Number",
          "info": "User ID",
          "required": true
        },
        {
          "name": "organizationMembershipId",
          "type": "Number",
          "info": "Organization membership ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteOrganizationMembershipsByIds",
      "description": "Immediately removes a user from a organization and schedules a job to unassign all working tickets that are assigned to the given user and organization combination",
      "method": "DELETE",
      "url": "/api/v2/organization_memberships/destroy_many.json?ids={organization_membership_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationMembershipIds",
          "type": "Array",
          "info": "Comma-separated list of organization membership IDs",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "searchUsersByQuery",
      "description": "Specify a partial or full name or email address as the value of the query attribute. Example: query=\"Gerry\". Specify an id number as the value of the external_id attribute. For more advanced searches of users, use the Search API.",
      "method": "GET",
      "url": "/api/v2/users/search.json?query={query}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "query",
          "type": "String",
          "info": "Query string to search",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "searchUsersByIds",
      "description": "Search users by IDs",
      "method": "GET",
      "url": "/api/v2/users/search.json?external_id={external_id}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "externalId",
          "type": "String",
          "info": "External ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateUsersByIds",
      "description": "Update users with the same data",
      "method": "PUT",
      "url": "/api/v2/users/update_many.json?ids={user_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "userIds",
          "type": "Array",
          "info": "List of user IDs to update same data",
          "required": true
        },
        {
          "name": "params",
          "type": "JSON",
          "info": "Param to be updated to all users, which ids send. Example: {\"organization_id\": 1}",
          "required": true,
          "wrapName": "user"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateUsersByExternalIds",
      "description": "Update users with the same data",
      "method": "PUT",
      "url": "/api/v2/users/update_many.json?external_ids={external_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "externalIds",
          "type": "Array",
          "info": "List of user external IDs to update same data",
          "required": true
        },
        {
          "name": "params",
          "type": "JSON",
          "info": "Param to be updated to all users, which ids send. Example: {\"organization_id\": 1}",
          "required": true,
          "wrapName": "user"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateUsers",
      "description": "Update users with the different data by id or externalId",
      "method": "PUT",
      "url": "/api/v2/users/update_many.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "params",
          "type": "JSON",
          "info": "Param to be updated to all users, which ids send. Example:  [{ \"id\": 10071, \"name\": \"New Name\", \"organization_id\": 1 },{ \"external_id\": \"123\", \"verified\": true }]. In each element in array required id or externalId.",
          "required": true,
          "wrapName": "users"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateOrganizationsByIds",
      "description": "Update organization with the same data by id",
      "method": "PUT",
      "url": "/api/v2/organizations/update_many.json?ids={organization_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationId",
          "type": "Array",
          "info": "List of organization ID",
          "required": true
        },
        {
          "name": "params",
          "type": "JSON",
          "info": "Param to be updated to all users, which ids send. Example: {\"notes\": \"Something interesting\"}. In each element in array required id or externalId.",
          "required": true,
          "wrapName": "organization"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateOrganizationsByExternalIds",
      "description": "Update organization with the same data by external id",
      "method": "PUT",
      "url": "/api/v2/organizations/update_many.json?ids={organization_external_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationExternalId",
          "type": "Array",
          "info": "List of organization external ID",
          "required": true
        },
        {
          "name": "params",
          "type": "JSON",
          "info": "Param to be updated to all users, which ids send. Example: {\"notes\": \"Something interesting\"}. In each element in array required id or externalId.",
          "required": true,
          "wrapName": "organization"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateOrganizations",
      "description": "Update organization with the different data by id or external id",
      "method": "PUT",
      "url": "/api/v2/organizations/update_many.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "params",
          "type": "JSON",
          "info": "Param to be updated to all users, which ids send. Example: [{\"id\": 1, \"notes\": \"Something interesting\" },{ \"external_id\": \"2\", \"notes\": \"Something even more interesting\"}]. In each element in array required id or externalId.",
          "required": true,
          "wrapName": "organizations"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteOrganizationSubscription",
      "description": "Delete organization subscription",
      "method": "DELETE",
      "url": "/api/v2/organization_subscriptions/{organization_subscription_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationSubscriptionId",
          "type": "Number",
          "info": "Organization subscription ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteOrganizationsByIds",
      "description": "Delete organizations by ids",
      "method": "DELETE",
      "url": "/api/v2/organizations/destroy_many.json?ids={organization_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationIds",
          "type": "Array",
          "info": "List of organization ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createSearchQuery",
      "description": "The search API is a unified search API that returns tickets, users, and organizations. You can define filters to narrow your search results according to resource type, dates, and object properties, such as ticket requester or tag.",
      "method": "GET",
      "url": "/api/v2/search.json?query={query}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "query",
          "type": "String",
          "info": "Params to search",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createTicketComment",
      "description": "Create ticket comment",
      "method": "PUT",
      "url": "/api/v2/tickets/{ticket_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        },
        {
          "name": "commentBody",
          "type": "String",
          "info": "Comment",
          "required": false,
          "vendorName": "body",
          "wrapName": "ticket.comment"
        },
        {
          "name": "commentHtmlBody",
          "type": "String",
          "info": "HTML code of comment",
          "required": false,
          "vendorName": "html_body",
          "wrapName": "ticket.comment"
        },
        {
          "name": "commentAuthorId",
          "type": "Number",
          "info": "Author ID of comment. If not set, system use owner of accessToken",
          "required": false,
          "vendorName": "author_id",
          "wrapName": "ticket.comment"
        },
        {
          "name": "commentShow",
          "type": "Boolean",
          "info": "False - make comment private",
          "required": false,
          "vendorName": "public",
          "wrapName": "ticket.comment"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "searchRequests",
      "description": "Search requests by params",
      "method": "GET",
      "url": "/api/v2/requests/search.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "query",
          "type": "String",
          "info": "Expression to find",
          "required": true
        },
        {
          "name": "organizationId",
          "type": "Number",
          "info": "Organization ID",
          "required": false
        },
        {
          "name": "status",
          "type": "Array",
          "info": "Ticket status: open, solved",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createRequest",
      "description": "Create single request",
      "method": "POST",
      "url": "/api/v2/requests.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "subject",
          "type": "String",
          "info": "Ticket title",
          "required": true,
          "wrapName": "request"
        },
        {
          "name": "description",
          "type": "String",
          "info": "Ticket body",
          "required": true,
          "wrapName": "request.comment",
          "vendorName": "body"
        },
        {
          "name": "status",
          "type": "String",
          "info": "The state of the request, \"new\", \"open\", \"pending\", \"hold\", \"solved\", \"closed\"",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "priority",
          "type": "String",
          "info": "The priority of the request, \"low\", \"normal\", \"high\", \"urgent\"",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "type",
          "type": "String",
          "info": "The type of the request, \"question\", \"incident\", \"problem\", \"task\"",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "customFields",
          "type": "JSON",
          "info": "The fields and entries for this request",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "organizationId",
          "type": "Number",
          "info": "The organization of the requester",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "requesterId",
          "type": "Number",
          "info": "The id of the requester",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "assigneeId",
          "type": "Number",
          "info": "The id of the assignee if the field is visible to end users",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "The id of the assigned group if the field is visible to end users",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "collaboratorIds",
          "type": "Array",
          "info": "Who are currently CC'ed on the ticket",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "isPublic",
          "type": "Boolean",
          "info": "Is true if any comments are public, false otherwise",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "canBeSolvedByMe",
          "type": "Boolean",
          "info": "If true, end user can mark request as solved.",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "solved",
          "type": "Boolean",
          "info": "Whether or not request is solved (an end user can set this if \"can_be_solved_by_me\", above, is true for that user)",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "ticketFormId",
          "type": "Number",
          "info": "The numeric id of the ticket form associated with this request if the form is visible to end users - only applicable for enterprise accounts",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "recipient",
          "type": "String",
          "info": "The original recipient e-mail address of the request",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "followupSourceId",
          "type": "Number",
          "info": "The id of the original ticket if this request is a follow-up ticket",
          "required": false,
          "wrapName": "request"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateRequest",
      "description": "Update single request",
      "method": "PUT",
      "url": "/api/v2/requests/{request_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "requestId",
          "type": "Number",
          "info": "Request ID",
          "required": true
        },
        {
          "name": "subject",
          "type": "String",
          "info": "Ticket title",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "comment",
          "type": "String",
          "info": "Comment body",
          "required": false,
          "wrapName": "request.comment",
          "vendorName": "body"
        },
        {
          "name": "status",
          "type": "String",
          "info": "The state of the request, \"new\", \"open\", \"pending\", \"hold\", \"solved\", \"closed\"",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "priority",
          "type": "String",
          "info": "The priority of the request, \"low\", \"normal\", \"high\", \"urgent\"",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "type",
          "type": "String",
          "info": "The type of the request, \"question\", \"incident\", \"problem\", \"task\"",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "customFields",
          "type": "JSON",
          "info": "The fields and entries for this request",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "solved",
          "type": "Boolean",
          "info": "Whether or not request is solved (an end user can set this if \"can_be_solved_by_me\", above, is true for that user)",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "ticketFormId",
          "type": "Number",
          "info": "The numeric id of the ticket form associated with this request if the form is visible to end users - only applicable for enterprise accounts",
          "required": false,
          "wrapName": "request"
        },
        {
          "name": "recipient",
          "type": "String",
          "info": "The original recipient e-mail address of the request",
          "required": false,
          "wrapName": "request"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getActions",
      "description": "Lists all automations for the current account",
      "method": "GET",
      "url": "/api/v2/automations.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "active",
          "type": "Boolean",
          "info": "Only active automations if true, inactive automations if false",
          "required": false
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are alphabetical, created_at, updated_at, usage_1h, usage_24h, or usage_7d. Defaults to position",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc or desc. Defaults to asc for alphabetical and position sort, desc for all others",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleAutomation",
      "description": "Get single automation by ID",
      "method": "GET",
      "url": "/api/v2/automations/{automation_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "automationId",
          "type": "Number",
          "info": "Automation ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getActiveAutomations",
      "description": "Lists all active automations",
      "method": "GET",
      "url": "/api/v2/automations/active.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are alphabetical, created_at, updated_at, usage_1h, usage_24h, or usage_7d. Defaults to position",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc or desc. Defaults to asc for alphabetical and position sort, desc for all others",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createAutomation",
      "description": "Create automation",
      "method": "POST",
      "url": "/api/v2/automations.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "automationData",
          "type": "JSON",
          "info": "Params of new automation https://developer.zendesk.com/rest_api/docs/core/automations#create-automation",
          "required": true,
          "vendorName": "automation"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateAutomation",
      "description": "Update automation",
      "method": "PUT",
      "url": "/api/v2/automations/{automation_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "automationId",
          "type": "Number",
          "info": "Automation ID",
          "required": true
        },
        {
          "name": "automationData",
          "type": "JSON",
          "info": "Params of new automation https://developer.zendesk.com/rest_api/docs/core/automations#create-automation",
          "required": true,
          "vendorName": "automation"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteAutomation",
      "description": "Delete automation",
      "method": "DELETE",
      "url": "/api/v2/automations/{automation_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "automationId",
          "type": "Number",
          "info": "Automation ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "searchAutomations",
      "description": "Search automation with params",
      "method": "GET",
      "url": "/api/v2/automations/search.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "query",
          "type": "String",
          "info": "Query string used to find all automations with matching title",
          "required": true
        },
        {
          "name": "active",
          "type": "Boolean",
          "info": "Only active automations if true, inactive automations if false",
          "required": false
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are alphabetical, created_at, updated_at, and position. If unspecified, the automations are sorted by relevance",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc or desc. Defaults to asc for alphabetical and position sort, desc for all others",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getMacrosList",
      "description": "Lists all shared and personal macros available to the current user.",
      "method": "GET",
      "url": "/api/v2/macros.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "access",
          "type": "String",
          "info": "Only macros with given access. Possible values are personal, shared, or account",
          "required": false
        },
        {
          "name": "active",
          "type": "Boolean",
          "info": "Only active macros if true, inactive macros if false",
          "required": false
        },
        {
          "name": "category",
          "type": "String",
          "info": "Only macros within given category",
          "required": false
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "Only macros belonging to given group",
          "required": false
        },
        {
          "name": "onlyViewable",
          "type": "Boolean",
          "info": "Only macros that can be applied to tickets if true, All macros the current user can manage if false. Defaults to false",
          "required": false
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are alphabetical, created_at, updated_at, usage_1h, usage_24h, or usage_7d. Defaults to alphabetical",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc or desc. Defaults to asc for alphabetical and position sort, desc for all others",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleMacro",
      "description": "Get single Macro by ID",
      "method": "GET",
      "url": "/api/v2/macros/{macro_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "macroId",
          "type": "Number",
          "info": "Macro ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getActiveMacros",
      "description": "Lists all active shared and personal macros available to the current user.",
      "method": "GET",
      "url": "/api/v2/macros/active.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "access",
          "type": "String",
          "info": "Only macros with given access. Possible values are personal, shared, or account",
          "required": false
        },
        {
          "name": "category",
          "type": "String",
          "info": "Only macros within given category",
          "required": false
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "Only macros belonging to given group",
          "required": false
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are alphabetical, created_at, updated_at, usage_1h, usage_24h, or usage_7d. Defaults to alphabetical",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc or desc. Defaults to asc for alphabetical and position sort, desc for all others",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createMacro",
      "description": "Create macro",
      "method": "POST",
      "url": "/api/v2/macros.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "macroParams",
          "type": "JSON",
          "info": "Macro params",
          "required": true,
          "vendorName": "macro"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateMacro",
      "description": "Update macro",
      "method": "PUT",
      "url": "/api/v2/macros/{macro_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "macroId",
          "type": "Number",
          "info": "Macro ID",
          "required": true
        },
        {
          "name": "macroParams",
          "type": "JSON",
          "info": "Macro params",
          "required": true,
          "vendorName": "macro"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteMacro",
      "description": "Delete macro",
      "method": "DELETE",
      "url": "/api/v2/macros/{macro_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "macroId",
          "type": "Number",
          "info": "Macro ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "showChangesToTicket",
      "description": "Returns the changes the macro would make to a ticket. It doesn't actually change a ticket. You can use the response data in a subsequent API call to the Tickets endpoint to update the ticket. The response includes only the ticket fields that would be changed by the macro. To get the full ticket object after the macro is applied, see Show Ticket After Changes below.",
      "method": "GET",
      "url": "/api/v2/macros/{macro_id}/apply.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "macroId",
          "type": "Number",
          "info": "Macro ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "showTicketAfterChanges",
      "description": "Returns the full ticket object as it would be after applying the macro to the ticket. It doesn't actually change the ticket. You can use the response data in a subsequent API call to the Tickets endpoint to update the ticket. To get only the ticket fields that would be changed by the macro, see Show Changes to Ticket.",
      "method": "GET",
      "url": "/api/v2/tickets/{ticket_id}/macros/{macro_id}/apply.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "Ticket ID",
          "required": true
        },
        {
          "name": "macroId",
          "type": "Number",
          "info": "Macro ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getMacroCategories",
      "description": "Lists all macro categories available to the current user.",
      "method": "GET",
      "url": "/api/v2/macros/categories.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "searchMacros",
      "description": "Search macros by title",
      "method": "GET",
      "url": "/api/v2/macros/search.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "query",
          "type": "String",
          "info": "Query string used to find macros with matching titles",
          "required": true
        },
        {
          "name": "access",
          "type": "String",
          "info": "List macros with the given access. Possible values are personal, shared, or account",
          "required": false
        },
        {
          "name": "active",
          "type": "Boolean",
          "info": "List active macros if true; inactive macros if false",
          "required": false
        },
        {
          "name": "category",
          "type": "String",
          "info": "List macros in the given category",
          "required": false
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "List macros belonging to given group",
          "required": false
        },
        {
          "name": "onlyViewable",
          "type": "Boolean",
          "info": "List macros that can be applied to tickets if true; list all macros the current user can manage if false. Default is false",
          "required": false
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are alphabetical, created_at, updated_at, and position. If unspecified, the macros are sorted by relevance",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc or desc. Defaults to asc for alphabetical and position sort, desc for all others",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSupportedActionsForMacros",
      "description": "List supported actions for macros",
      "method": "GET",
      "url": "/api/v2/macros/actions.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "showMacroReplica",
      "description": "Returns an unpersisted macro representation derived from a ticket or macro.",
      "method": "GET",
      "url": "/api/v2/macros/new.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "macroId",
          "type": "Number",
          "info": "ID of the macro to replicate. You must pass this value or ticketId",
          "required": false
        },
        {
          "name": "ticketId",
          "type": "Number",
          "info": "ID of the ticket from which to build a macro replica. You must pass this value or macroId",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSLAPolicies",
      "description": "Get Service Level Agreements. Accounts on the Professional and Enterprise plans",
      "method": "GET",
      "url": "/api/v2/slas/policies",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleSLAPolicy",
      "description": "Get single SLA Policy",
      "method": "GET",
      "url": "/api/v2/slas/policies/{sla_policy_id}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "slaPolicyId",
          "type": "Number",
          "info": "SLA Policy ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createSLAPolicy",
      "description": "Create SLA Policy",
      "method": "POST",
      "url": "/api/v2/slas/policies",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "slaPolicyData",
          "type": "JSON",
          "info": "SLA Policy params",
          "required": true,
          "vendorName": "sla_policy"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateSLAPolicy",
      "description": "Create SLA Policy",
      "method": "POST",
      "url": "/api/v2/slas/policies/{sla_policy_id}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "slaPolicyId",
          "type": "Number",
          "info": "SLA Policy ID",
          "required": true
        },
        {
          "name": "slaPolicyData",
          "type": "JSON",
          "info": "SLA Policy params",
          "required": true,
          "vendorName": "sla_policy"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteSLAPolicy",
      "description": "Delete SLA Policy",
      "method": "DELETE",
      "url": "/api/v2/slas/policies/{sla_policy_id}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "slaPolicyId",
          "type": "Number",
          "info": "SLA Policy ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "reorderSLAPolicies",
      "description": "Reorder SLA Policies",
      "method": "PUT",
      "url": "/api/v2/slas/policies/reorder.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "slaPolicyIds",
          "type": "Array",
          "info": "List of SLA Policy IDs",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSupportedFilterDefinitionItems",
      "description": "Retrieve supported filter definition items. Accounts on the Professional and Enterprise plans only",
      "method": "GET",
      "url": "/api/v2/slas/policies/definitions.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTargets",
      "description": "Targets are pointers to cloud-based applications and services such as Twitter and Twilio, as well as to HTTP and email addresses. You can use targets with triggers and automations to send a notification to the target when a ticket is created or updated.",
      "method": "GET",
      "url": "/api/v2/targets.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleTarget",
      "description": "Get single target",
      "method": "GET",
      "url": "/api/v2/targets/{target_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "targetId",
          "type": "Number",
          "info": "Target ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createTarget",
      "description": "Create target",
      "method": "POST",
      "url": "/api/v2/targets.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "targetData",
          "type": "JSON",
          "info": "Target data",
          "required": true,
          "vendorName": "target"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateTarget",
      "description": "Update target",
      "method": "PUT",
      "url": "/api/v2/targets/{target_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "targetId",
          "type": "Number",
          "info": "Target ID",
          "required": true
        },
        {
          "name": "targetData",
          "type": "JSON",
          "info": "Target data",
          "required": true,
          "vendorName": "target"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteTarget",
      "description": "Delete target",
      "method": "DELETE",
      "url": "/api/v2/targets/{target_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "targetId",
          "type": "Number",
          "info": "Target ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTriggers",
      "description": "Lists all triggers for the current account",
      "method": "GET",
      "url": "/api/v2/triggers.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "active",
          "type": "Boolean",
          "info": "Only active triggers if true, inactive triggers if false",
          "required": false
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are alphabetical, created_at, updated_at, usage_1h, usage_24h, or usage_7d. Defaults to position",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc or desc. Defaults to asc for alphabetical and position sort, desc for all others",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleTrigger",
      "description": "Get single trigger by ID",
      "method": "GET",
      "url": "/api/v2/triggers/{trigger_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "triggerId",
          "type": "Number",
          "info": "Trigger ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getActiveTriggers",
      "description": "Lists all active triggers",
      "method": "GET",
      "url": "/api/v2/triggers/active.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are alphabetical, created_at, updated_at, usage_1h, usage_24h, or usage_7d. Defaults to position",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc or desc. Defaults to asc for alphabetical and position sort, desc for all others",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createTrigger",
      "description": "Create trigger",
      "method": "POST",
      "url": "/api/v2/triggers.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "triggerData",
          "type": "JSON",
          "info": "Trigger params",
          "required": true,
          "vendorName": "trigger"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateTrigger",
      "description": "Create trigger",
      "method": "PUT",
      "url": "/api/v2/triggers/{trigger_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "triggerId",
          "type": "Number",
          "info": "Trigger ID",
          "required": true
        },
        {
          "name": "triggerData",
          "type": "JSON",
          "info": "Trigger params",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteTrigger",
      "description": "Delete trigger",
      "method": "DELETE",
      "url": "/api/v2/triggers/{trigger_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "triggerId",
          "type": "Number",
          "info": "Trigger ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "reorderTriggers",
      "description": "Reorder triggers",
      "method": "PUT",
      "url": "/api/v2/triggers/reorder.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "triggerIds",
          "type": "Array",
          "info": "List of trigger IDs",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "searchTriggers",
      "description": "Search triggers by query in title",
      "method": "GET",
      "url": "/api/v2/triggers/search.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "query",
          "type": "String",
          "info": "Query string used to find all triggers with matching title",
          "required": true
        },
        {
          "name": "active",
          "type": "Boolean",
          "info": "Only active triggers if true, inactive triggers if false",
          "required": false
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are alphabetical, created_at, updated_at, and position. If unspecified, the triggers are sorted by relevance",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc or desc. Defaults to asc for alphabetical and position sort, desc for all others",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getViews",
      "description": "Lists shared and personal Views available to the current user",
      "method": "GET",
      "url": "/api/v2/views.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "access",
          "type": "String",
          "info": "Only views with given access. May be personal, shared, or account",
          "required": false
        },
        {
          "name": "active",
          "type": "Boolean",
          "info": "Only active views if true, inactive views if false",
          "required": false
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "Only views belonging to given group",
          "required": false
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are alphabetical, created_at, or updated_at. Defaults to position",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc or desc. Defaults to asc for alphabetical and position sort, desc for all others",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getActiveViews",
      "description": "Lists active shared and personal Views available to the current user",
      "method": "GET",
      "url": "/api/v2/views/active.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "access",
          "type": "String",
          "info": "Only views with given access. May be personal, shared, or account",
          "required": false
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "Only views belonging to given group",
          "required": false
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are alphabetical, created_at, or updated_at. Defaults to position",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc or desc. Defaults to asc for alphabetical and position sort, desc for all others",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleView",
      "description": "Get single view by ID",
      "method": "GET",
      "url": "/api/v2/views/{view_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "viewId",
          "type": "Number",
          "info": "A view consists of one or more conditions that define a collection of tickets to display.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createView",
      "description": "Create view",
      "method": "POST",
      "url": "/api/v2/views.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "viewData",
          "type": "JSON",
          "info": "A view consists of one or more conditions that define a collection of tickets to display.",
          "required": true,
          "vendorName": "view"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateView",
      "description": "Update view",
      "method": "PUT",
      "url": "/api/v2/views/{view_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "viewId",
          "type": "Number",
          "info": "View ID",
          "required": true
        },
        {
          "name": "viewData",
          "type": "JSON",
          "info": "A view consists of one or more conditions that define a collection of tickets to display.",
          "required": true,
          "vendorName": "view"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteView",
      "description": "Delete view",
      "method": "DELETE",
      "url": "/api/v2/views/{view_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "viewId",
          "type": "Number",
          "info": "View ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "executeView",
      "description": "You execute a view in order to get the tickets that fulfill the conditions of the view.",
      "method": "GET",
      "url": "/api/v2/views/{view_id}/execute.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "viewId",
          "type": "Number",
          "info": "View ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getTicketsFromView",
      "description": "Get tickets from a view",
      "method": "GET",
      "url": "/api/v2/views/{view_id}/tickets.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "viewId",
          "type": "Number",
          "info": "View ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getViewsCounts",
      "description": "Calculates the size of the view in terms of number of tickets the view will return. Only returns values for personal and shared views accessible to the user performing the request.",
      "method": "GET",
      "url": "/api/v2/views/count_many.json?ids={view_ids}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "viewIds",
          "type": "Array",
          "info": "List of view IDs",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleViewCount",
      "description": "Returns the ticket count for a single view.",
      "method": "GET",
      "url": "/api/v2/views/{view_id}/count.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "viewId",
          "type": "Number",
          "info": "View IDs",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "exportViews",
      "description": "Returns the csv attachment of the current view if possible. Enqueues job to produce the csv if necessary",
      "method": "GET",
      "url": "/api/v2/views/{view_id}/export.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "viewId",
          "type": "Number",
          "info": "View IDs",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "searchViews",
      "description": "Search views",
      "method": "GET",
      "url": "/api/v2/views/search.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "query",
          "type": "String",
          "info": "Query string used to find all views with matching title",
          "required": true
        },
        {
          "name": "access",
          "type": "String",
          "info": "Only views with given access. May be personal, shared, or account",
          "required": false
        },
        {
          "name": "active",
          "type": "Boolean",
          "info": "Only active views if true, inactive views if false",
          "required": false
        },
        {
          "name": "groupId",
          "type": "Number",
          "info": "Only views belonging to given group",
          "required": false
        },
        {
          "name": "sortBy",
          "type": "String",
          "info": "Possible values are alphabetical, created_at, updated_at, and position. If unspecified, the views are sorted by relevance",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "String",
          "info": "One of asc or desc. Defaults to asc for alphabetical and position sort, desc for all other",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAccountSettings",
      "description": "Shows the settings that are available for the account.",
      "method": "GET",
      "url": "/api/v2/account/settings.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateAccountSettings",
      "description": "Updates settings for the account. See JSON Format from getAccountSettings for the settings you can update.",
      "method": "GET",
      "url": "/api/v2/account/settings.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "settings",
          "type": "JSON",
          "info": "New data for account settings",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getAuditLogs",
      "description": "Listing Audit Logs",
      "method": "GET",
      "url": "/api/v2/audit_logs.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleAuditLog",
      "description": "Get single audit log",
      "method": "GET",
      "url": "/api/v2/audit_logs/{audit_log_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "auditLogId",
          "type": "Number",
          "info": "Audit log ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getBrands",
      "description": "Returns a list of all brands for your account sorted by name.",
      "method": "GET",
      "url": "/api/v2/brands.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleBrand",
      "description": "Get single brand",
      "method": "GET",
      "url": "/api/v2/brands/{brand_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "brandId",
          "type": "Number",
          "info": "Brand ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createBrand",
      "description": "Create a brand",
      "method": "POST",
      "url": "/api/v2/brands.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "The name of the brand",
          "required": true,
          "wrapName": "brand"
        },
        {
          "name": "brandUrl",
          "type": "String",
          "info": "The url of the brand",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "hasHelpCenter",
          "type": "Boolean",
          "info": "If the brand has a Help Center",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "helpCenterState",
          "type": "String",
          "info": "The state of the Help Center: enabled, disabled, or restricted",
          "required": false,
          "wrapName": "Brand"
        },
        {
          "name": "active",
          "type": "Boolean",
          "info": "If the brand is set as active",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "default",
          "type": "Boolean",
          "info": "Is the brand the default brand for this account",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "logo",
          "type": "String",
          "info": "?",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "ticketFormIds",
          "type": "Array",
          "info": "List of ticket IDs forms that are available for use by a brand",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "subdomain",
          "type": "String",
          "info": "The subdomain of the brand (only admins view this key)",
          "required": true,
          "wrapName": "brand"
        },
        {
          "name": "hostMapping",
          "type": "String",
          "info": "The hostmapping to this brand, if any (only admins view this key)",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "signatureTemplate",
          "type": "String",
          "info": "The signature template for a brand",
          "required": false,
          "wrapName": "brand"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateBrand",
      "description": "Returns an updated brand.",
      "method": "PUT",
      "url": "/api/v2/brands/{brand_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "brandId",
          "type": "Number",
          "info": "Brand ID",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "The name of the brand",
          "required": true,
          "wrapName": "brand"
        },
        {
          "name": "brandUrl",
          "type": "String",
          "info": "The url of the brand",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "hasHelpCenter",
          "type": "Boolean",
          "info": "If the brand has a Help Center",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "active",
          "type": "Boolean",
          "info": "If the brand is set as active",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "default",
          "type": "Boolean",
          "info": "Is the brand the default brand for this account",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "logo",
          "type": "String",
          "info": "?",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "subdomain",
          "type": "String",
          "info": "The subdomain of the brand (only admins view this key)",
          "required": true,
          "wrapName": "brand"
        },
        {
          "name": "hostMapping",
          "type": "String",
          "info": "The hostmapping to this brand, if any (only admins view this key)",
          "required": false,
          "wrapName": "brand"
        },
        {
          "name": "signatureTemplate",
          "type": "String",
          "info": "The signature template for a brand",
          "required": false,
          "wrapName": "brand"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteBrand",
      "description": "Deletes a brand.",
      "method": "DELETE",
      "url": "/api/v2/brands/{brand_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "brandId",
          "type": "Number",
          "info": "Brand ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "checkHostMappingValidity",
      "description": "Returns a JSON object determining whether a host mapping is valid for a given subdomain.",
      "method": "GET",
      "url": "/api/v2/brands/check_host_mapping.json?host_mapping={host_mapping}&subdomain={subdomain}",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "hostMapping",
          "type": "String",
          "info": "The hostmapping to this brand, if any (only admins view this key)",
          "required": true
        },
        {
          "name": "subdomain",
          "type": "String",
          "info": "The subdomain of the brand (only admins view this key)",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateBrandImage",
      "description": "A brand image can be updated by uploading a local file using the update brand endpoint.",
      "method": "PUT",
      "url": "/api/v2/brands/{brand_id}.json",
      "type": "binary",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "brandId",
          "type": "Number",
          "info": "Brand ID",
          "required": true
        },
        {
          "name": "logo",
          "type": "File",
          "info": "File to upload",
          "required": true,
          "wrapName": "brand.photo.uploaded_data"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateDefaultBrand",
      "description": "The default brand is the one that tickets get assigned to if the ticket is generated from a non-branded channel. You can update the default brand using the updateAccountSettings endpoint.",
      "method": "PUT",
      "url": "/api/v2/brands.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "brandId",
          "type": "Number",
          "info": "Brand ID to set as default",
          "required": true,
          "wrapName": "settings.brands",
          "vendorName": "default_brand_id"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getLocales",
      "description": "This lists the translation locales that are available for the account.",
      "method": "GET",
      "url": "/api/v2/locales.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleLocale",
      "description": "Get single locale by ID",
      "method": "GET",
      "url": "/api/v2/locales/{locale_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "localeId",
          "type": "Number",
          "info": "Locale ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "showCurrentLocale",
      "description": "Show current locale",
      "method": "GET",
      "url": "/api/v2/locales/current.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "detectLocaleForUser",
      "description": "Detect best language for user",
      "method": "GET",
      "url": "/api/v2/locales/detect_best_locale.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getOrganizationFields",
      "description": "Returns a list of all custom Organization Fields in your account. Fields are returned in the order that you specify in your Organization Fields configuration in Zendesk Support. Clients should cache this resource for the duration of their API usage and map the key for each Organization.",
      "method": "GET",
      "url": "/api/v2/organization_fields.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleOrganizationField",
      "description": "Get single organization field by ID",
      "method": "GET",
      "url": "/api/v2/organization_fields/{organization_field_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationFieldId",
          "type": "Number",
          "info": "Organization Field ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createOrganizationField",
      "description": "Create new organization field",
      "method": "POST",
      "url": "/api/v2/organization_fields.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "key",
          "type": "String",
          "info": "A unique key that identifies this custom field. This is used for updating the field and referencing in placeholders.",
          "required": true,
          "wrapName": "organization_field"
        },
        {
          "name": "type",
          "type": "String",
          "info": "Type of the custom field: \"checkbox\", \"date\", \"decimal\", \"dropdown\", \"integer\", \"regexp\", \"text\", or \"textarea\"",
          "required": true,
          "wrapName": "organization_field"
        },
        {
          "name": "title",
          "type": "String",
          "info": "The title of the custom field",
          "required": true,
          "wrapName": "organization_field"
        },
        {
          "name": "rawTitle",
          "type": "String",
          "info": "The dynamic content placeholder, if present, or the \"title\" value, if not. See dynamic content at Zendesk Core API -> Dynamic Content",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "description",
          "type": "String",
          "info": "User-defined description of this field's purpose",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "rawDescription",
          "type": "String",
          "info": "The dynamic content placeholder, if present, or the \"description\" value, if not. See dynamic content at Zendesk Core API -> Dynamic Content",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "position",
          "type": "Number",
          "info": "Ordering of the field relative to other fields",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "active",
          "type": "Boolean",
          "info": "If true, this field is available for use",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "system",
          "type": "Boolean",
          "info": "If true, only active and position values of this field can be changed",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "regexpForValidation",
          "type": "String",
          "info": "Regular expression field only. The validation pattern for a field value to be deemed valid.",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "tag",
          "type": "String",
          "info": "Optional for custom field of type \"checkbox\"; not presented otherwise.",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "customFieldOptions",
          "type": "Array",
          "info": "Required and presented for a custom field of type \"dropdown\"",
          "required": true,
          "wrapName": "organization_field"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateOrganizationField",
      "description": "Update new organization field",
      "method": "PUT",
      "url": "/api/v2/organization_fields/{organization_field_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationFieldId",
          "type": "Number",
          "info": "Organization field ID",
          "required": true
        },
        {
          "name": "key",
          "type": "String",
          "info": "A unique key that identifies this custom field. This is used for updating the field and referencing in placeholders.",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "type",
          "type": "String",
          "info": "Type of the custom field: \"checkbox\", \"date\", \"decimal\", \"dropdown\", \"integer\", \"regexp\", \"text\", or \"textarea\"",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "title",
          "type": "String",
          "info": "The title of the custom field",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "rawTitle",
          "type": "String",
          "info": "The dynamic content placeholder, if present, or the \"title\" value, if not. See dynamic content at Zendesk Core API -> Dynamic Content",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "description",
          "type": "String",
          "info": "User-defined description of this field's purpose",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "rawDescription",
          "type": "String",
          "info": "The dynamic content placeholder, if present, or the \"description\" value, if not. See dynamic content at Zendesk Core API -> Dynamic Content",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "position",
          "type": "Number",
          "info": "Ordering of the field relative to other fields",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "active",
          "type": "Boolean",
          "info": "If true, this field is available for use",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "regexpForValidation",
          "type": "String",
          "info": "Regular expression field only. The validation pattern for a field value to be deemed valid.",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "tag",
          "type": "String",
          "info": "Optional for custom field of type \"checkbox\"; not presented otherwise.",
          "required": false,
          "wrapName": "organization_field"
        },
        {
          "name": "customFieldOptions",
          "type": "Array",
          "info": "Required and presented for a custom field of type \"dropdown\"",
          "required": false,
          "wrapName": "organization_field"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteOrganizationField",
      "description": "Delete new organization field",
      "method": "DELETE",
      "url": "/api/v2/organization_fields/{organization_field_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationFieldId",
          "type": "Number",
          "info": "Organization field ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "reorderOrganizationField",
      "description": "Reorder organization fields",
      "method": "PUT",
      "url": "/api/v2/organization_fields/reorder.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "organizationFieldIds",
          "type": "Array",
          "info": "List of organization field IDs",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSchedules",
      "description": "List all schedules",
      "method": "GET",
      "url": "/api/v2/business_hours/schedules.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleSchedule",
      "description": "List all schedules",
      "method": "GET",
      "url": "/api/v2/business_hours/schedules/{schedule_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "scheduleId",
          "type": "Number",
          "info": "Schedule ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createSchedule",
      "description": "Create a schedule",
      "method": "POST",
      "url": "/api/v2/business_hours/schedules.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "Name of the schedule",
          "required": true,
          "wrapName": "schedule"
        },
        {
          "name": "timeZone",
          "type": "String",
          "info": "Timezone",
          "required": true,
          "wrapName": "schedule"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateSchedule",
      "description": "Update a schedule",
      "method": "PUT",
      "url": "/api/v2/business_hours/schedules/{schedule_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "scheduleId",
          "type": "Number",
          "info": "Schedule ID",
          "required": true
        },
        {
          "name": "name",
          "type": "String",
          "info": "Name of the schedule",
          "required": false,
          "wrapName": "schedule"
        },
        {
          "name": "timeZone",
          "type": "String",
          "info": "Timezone",
          "required": false,
          "wrapName": "schedule"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateIntervalsForSchedule",
      "description": "Update intervals of schedule",
      "method": "PUT",
      "url": "/api/v2/business_hours/schedules/{schedule_id}/workweek.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "scheduleId",
          "type": "Number",
          "info": "Schedule ID",
          "required": true
        },
        {
          "name": "intervals",
          "type": "JSON",
          "info": "List of obj intervals. Example: [{\"start_time\": 3420, \"end_time\": 3900}]",
          "required": true,
          "wrapName": "workweek"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteSchedule",
      "description": "Delete a schedule",
      "method": "DELETE",
      "url": "/api/v2/business_hours/schedules/{schedule_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "scheduleId",
          "type": "Number",
          "info": "Schedule ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "createHoliday",
      "description": "Create a schedule holiday",
      "method": "POST",
      "url": "/api/v2/business_hours/schedules/{schedule_id}/holidays.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "scheduleId",
          "type": "Number",
          "info": "Schedule ID",
          "required": true
        },
        {
          "name": "holidayName",
          "type": "String",
          "info": "Holiday name",
          "required": true,
          "vendorName": "name",
          "wrapName": "holiday"
        },
        {
          "name": "startDate",
          "type": "String",
          "info": "Must be in ISO 8601 date format (e.g. 2016-01-01).",
          "required": true,
          "wrapName": "holiday"
        },
        {
          "name": "endDate",
          "type": "String",
          "info": "Must be in ISO 8601 date format (e.g. 2016-01-01).",
          "required": true,
          "wrapName": "holiday"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getScheduleHolidays",
      "description": "List holidays for a schedule",
      "method": "GET",
      "url": "/api/v2/business_hours/schedules/{schedule_id}/holidays.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "scheduleId",
          "type": "Number",
          "info": "Schedule ID",
          "required": true
        },
        {
          "name": "startDate",
          "type": "String",
          "info": "Must be in ISO 8601 date format (e.g. 2016-01-01).",
          "required": false
        },
        {
          "name": "endDate",
          "type": "String",
          "info": "Must be in ISO 8601 date format (e.g. 2016-01-01).",
          "required": false
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "getSingleHoliday",
      "description": "Get single holiday",
      "method": "GET",
      "url": "/api/v2/business_hours/schedules/{schedule_id}/holidays/{holiday_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "scheduleId",
          "type": "Number",
          "info": "Schedule ID",
          "required": true
        },
        {
          "name": "holidayId",
          "type": "Number",
          "info": "Holiday ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "updateHoliday",
      "description": "Update a holiday",
      "method": "PUT",
      "url": "/api/v2/business_hours/schedules/{schedule_id}/holidays/{holiday_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "scheduleId",
          "type": "Number",
          "info": "Schedule ID",
          "required": true
        },
        {
          "name": "holidayId",
          "type": "Number",
          "info": "Holiday ID",
          "required": true
        },
        {
          "name": "holidayName",
          "type": "String",
          "info": "Holiday name",
          "required": true,
          "vendorName": "name",
          "wrapName": "holiday"
        },
        {
          "name": "startDate",
          "type": "String",
          "info": "Must be in ISO 8601 date format (e.g. 2016-01-01).",
          "required": true,
          "wrapName": "holiday"
        },
        {
          "name": "endDate",
          "type": "String",
          "info": "Must be in ISO 8601 date format (e.g. 2016-01-01).",
          "required": true,
          "wrapName": "holiday"
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    },
    {
      "name": "deleteHoliday",
      "description": "Delete a holiday",
      "method": "DELETE",
      "url": "/api/v2/business_hours/schedules/{schedule_id}/holidays/{holiday_id}.json",
      "args": [
        {
          "name": "accessToken",
          "type": "String",
          "info": "Access Token",
          "required": true
        },
        {
          "name": "domain",
          "type": "String",
          "info": "Your domain in Zendesk system.",
          "required": true
        },
        {
          "name": "scheduleId",
          "type": "Number",
          "info": "Schedule ID",
          "required": true
        },
        {
          "name": "holidayId",
          "type": "Number",
          "info": "Holiday ID",
          "required": true
        }
      ],
      "callbacks": [
        {
          "name": "error",
          "info": "Error"
        },
        {
          "name": "success",
          "info": "Success"
        }
      ]
    }
  ]
}
